With ``gipc`` you can easily use ``multiprocessing`` and ``gevent`` within one Python application.

**What does gipc provide?**

    - gevent-aware ``multiprocessing.Process``-based child processes.
    - gevent-aware inter-process communication (a lot of dashes, huh?).


**Isn't this achievable with just gevent+multiprocessing?**

It is, and this is precisely what ``gipc`` does. It just requires at lot of care:
On Unix, child process creation via Python's ``multiprocessing`` package in the
context of ``gevent`` might yield an undesired event loop state in the child and
most likely breaks your application in some way. Furthermore, blocking method calls
such as ``join()`` on a ``multiprocessing.Process`` or the ``send()``/``recv()`` methods
on a ``multiprocessing.Pipe`` are not gevent-cooperative. ``gipc`` hides and
solves these problems for you in a straight-forward fashion and allows for
simple integration of child processes in your application.


Docs:
The documentation with API details, installation instructions and requirements can be found online at http://gehrcke.de/gipc.

Availability:
Download the latest release at PyPI (http://pypi.python.org/pypi/gipc) or clone the repository from bitbucket (https://bitbucket.org/jgehrcke/gipc).


License:
gipc is written and maintained by Jan-Philip Gehrcke (http://gehrcke.de) and is licensed under the Apache 2 license.

Contact:
I would appreciate your feedback. You can contact me at jgehrcke@googlemail.com